{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KAEpCC,YAAW,IAELN,EACGI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAElBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,KAEvBA,MAINU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,EAAAf,GAASgB,OAAOC,QAAQ,uBAAqBL,QAAiBC,UAG/DK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,EAAAf,GAASgB,OAAOG,QAAQ,sBAAoBP,QAAeC,UASlDO,SAASC,cAAc,SAoB/BC,iBAAiB,UAlBHC,IACnBA,EAAMC,iBAEN,MAAMC,EAAaC,OAAOH,EAAMI,cAAc,GAAGC,OAC3CC,EAAYH,OAAOH,EAAMI,cAAc,GAAGC,OAC1CE,EAASJ,OAAOH,EAAMI,cAAc,GAAGC,OAE7C,IAAIf,EAAQY,EAEZ,IAAK,IAAIM,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAEhC7B,EAAc6B,EAAGlB,GAEjBA,GAASgB","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict'\n\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n\n      if (shouldResolve) {\n      return resolve({ position, delay })\n      } else {\n        return reject({ position, delay })\n      }\n        }, delay);\n    })\n    \n    promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n   \n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n\n}\n\n\n\n\nconst formEl = document.querySelector('.form')\n\nconst onSubmitForm = event => {\n  event.preventDefault()\n\n  const firstDelay = Number(event.currentTarget[0].value)\n  const stepDelay = Number(event.currentTarget[1].value)\n  const amount = Number(event.currentTarget[2].value)\n\n  let delay = firstDelay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    \n    createPromise(i, delay)\n    \n    delay += stepDelay\n  }\n}\n\n\nformEl.addEventListener('submit', onSubmitForm)"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","document","querySelector","addEventListener","event","preventDefault","firstDelay","Number","currentTarget","value","stepDelay","amount","i"],"version":3,"file":"03-promises.21354372.js.map"}